#!/usr/bin/env python3
"""
Ejemplo de uso del scraper de empresas
Muestra c√≥mo usar la aplicaci√≥n con configuraci√≥n personalizada
"""

import pandas as pd
from datetime import datetime
import time

def ejemplo_basico():
    """Ejemplo b√°sico de uso del scraper"""
    print("=" * 50)
    print("EJEMPLO B√ÅSICO - Scraper de Empresas")
    print("=" * 50)

    try:
        from empresa_scraper import EmpresaScraper

        # Crear instancia del scraper
        scraper = EmpresaScraper()

        # Configurar par√°metros
        archivo_csv = "municipios_pedanias_codigos_postales_corregidos.csv"
        max_codigos = 2  # Solo procesar 2 c√≥digos postales para el ejemplo

        print(f"üìÅ Archivo CSV: {archivo_csv}")
        print(f"üî¢ C√≥digos postales a procesar: {max_codigos}")
        print()

        # Ejecutar b√∫squeda
        print("üöÄ Iniciando b√∫squeda...")
        empresas = scraper.ejecutar_busqueda(archivo_csv, max_codigos=max_codigos)

        # Guardar resultados
        archivo_salida = f"ejemplo_basico_{datetime.now().strftime('%Y%m%d_%H%M%S')}.xlsx"
        scraper.guardar_resultados(archivo_salida)

        print(f"\n‚úÖ Ejemplo b√°sico completado")
        print(f"üìä Empresas encontradas: {len(empresas)}")
        print(f"üíæ Resultados guardados en: {archivo_salida}")

        return True

    except Exception as e:
        print(f"‚ùå Error en ejemplo b√°sico: {e}")
        return False

def ejemplo_avanzado():
    """Ejemplo avanzado con configuraci√≥n personalizada"""
    print("\n" + "=" * 50)
    print("EJEMPLO AVANZADO - Scraper Avanzado")
    print("=" * 50)

    try:
        from scraper_avanzado import ScraperAvanzado

        # Crear instancia del scraper avanzado
        scraper = ScraperAvanzado()

        # Configuraci√≥n personalizada
        archivo_csv = "municipios_pedanias_codigos_postales_corregidos.csv"
        max_codigos = 1  # Solo 1 c√≥digo postal para el ejemplo

        print(f"üìÅ Archivo CSV: {archivo_csv}")
        print(f"üî¢ C√≥digos postales a procesar: {max_codigos}")
        print("üîß Configuraci√≥n avanzada activada")
        print()

        # Ejecutar b√∫squeda avanzada
        print("üöÄ Iniciando b√∫squeda avanzada...")
        empresas = scraper.ejecutar_busqueda_avanzada(archivo_csv, max_codigos=max_codigos)

        # Guardar resultados con formato avanzado
        archivo_salida = f"ejemplo_avanzado_{datetime.now().strftime('%Y%m%d_%H%M%S')}.xlsx"
        scraper.guardar_resultados_avanzados(archivo_salida)

        print(f"\n‚úÖ Ejemplo avanzado completado")
        print(f"üìä Empresas encontradas: {len(empresas)}")
        print(f"üíæ Resultados guardados en: {archivo_salida}")

        return True

    except Exception as e:
        print(f"‚ùå Error en ejemplo avanzado: {e}")
        return False

def ejemplo_codigo_especifico():
    """Ejemplo buscando en un c√≥digo postal espec√≠fico"""
    print("\n" + "=" * 50)
    print("EJEMPLO - C√ìDIGO POSTAL ESPEC√çFICO")
    print("=" * 50)

    try:
        from scraper_avanzado import ScraperAvanzado

        # Crear instancia del scraper
        scraper = ScraperAvanzado()

        # C√≥digo postal espec√≠fico (Bullas)
        codigo_postal = "30180"

        print(f"üîç Buscando empresas en c√≥digo postal: {codigo_postal}")
        print()

        # Procesar solo este c√≥digo postal
        empresas = scraper.procesar_codigo_postal_avanzado(codigo_postal)

        if empresas:
            print(f"\nüìä Empresas encontradas en {codigo_postal}: {len(empresas)}")
            print("\nüìã Muestra de empresas:")

            for i, empresa in enumerate(empresas[:3], 1):
                print(f"   {i}. {empresa['razon_social']}")
                print(f"      üìç {empresa['direccion']}")
                print(f"      üìß {empresa['email']}")
                print(f"      üìû {empresa['telefono']}")
                print(f"      üè¢ {empresa['fuente']}")
                print()
        else:
            print("‚ùå No se encontraron empresas para este c√≥digo postal")

        return True

    except Exception as e:
        print(f"‚ùå Error en ejemplo c√≥digo espec√≠fico: {e}")
        return False

def ejemplo_analisis_datos():
    """Ejemplo de an√°lisis de los datos obtenidos"""
    print("\n" + "=" * 50)
    print("EJEMPLO - AN√ÅLISIS DE DATOS")
    print("=" * 50)

    try:
        # Cargar datos de ejemplo (si existen)
        archivos_resultado = [
            "empresas_encontradas.xlsx",
            "empresas_avanzadas.xlsx",
            "demo_empresas.xlsx"
        ]

        df = None
        for archivo in archivos_resultado:
            try:
                df = pd.read_excel(archivo)
                print(f"üìä Datos cargados desde: {archivo}")
                break
            except:
                continue

        if df is None:
            print("‚ùå No se encontraron archivos de resultados")
            print("   Ejecuta primero uno de los ejemplos anteriores")
            return False

        # An√°lisis b√°sico
        print(f"\nüìà AN√ÅLISIS DE DATOS:")
        print(f"   - Total empresas: {len(df)}")
        print(f"   - Empresas con email: {len(df[df['email'].notna() & (df['email'] != '')])}")
        print(f"   - Empresas con tel√©fono: {len(df[df['telefono'].notna() & (df['telefono'] != '')])}")
        print(f"   - Empresas con CNAE: {len(df[df['cnae'].notna() & (df['cnae'] != '')])}")

        # An√°lisis por fuentes
        if 'fuente' in df.columns:
            print(f"\nüìä DISTRIBUCI√ìN POR FUENTES:")
            fuentes = df['fuente'].value_counts()
            for fuente, cantidad in fuentes.items():
                print(f"   - {fuente}: {cantidad}")

        # An√°lisis por c√≥digos postales
        if 'codigo_postal' in df.columns:
            print(f"\nüìÆ EMPRESAS POR C√ìDIGO POSTAL:")
            codigos = df['codigo_postal'].value_counts().head(5)
            for codigo, cantidad in codigos.items():
                print(f"   - {codigo}: {cantidad}")

        # Guardar an√°lisis
        archivo_analisis = f"analisis_empresas_{datetime.now().strftime('%Y%m%d_%H%M%S')}.txt"
        with open(archivo_analisis, 'w', encoding='utf-8') as f:
            f.write("AN√ÅLISIS DE EMPRESAS ENCONTRADAS\n")
            f.write("=" * 40 + "\n\n")
            f.write(f"Fecha: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}\n")
            f.write(f"Total empresas: {len(df)}\n\n")

            if 'fuente' in df.columns:
                f.write("DISTRIBUCI√ìN POR FUENTES:\n")
                for fuente, cantidad in fuentes.items():
                    f.write(f"- {fuente}: {cantidad}\n")
                f.write("\n")

            if 'codigo_postal' in df.columns:
                f.write("EMPRESAS POR C√ìDIGO POSTAL:\n")
                for codigo, cantidad in codigos.items():
                    f.write(f"- {codigo}: {cantidad}\n")

        print(f"\nüíæ An√°lisis guardado en: {archivo_analisis}")

        return True

    except Exception as e:
        print(f"‚ùå Error en an√°lisis de datos: {e}")
        return False

def menu_principal():
    """Men√∫ principal de ejemplos"""
    print("üß™ EJEMPLOS DE USO - SCRAPER DE EMPRESAS")
    print("=" * 50)
    print()
    print("Selecciona un ejemplo:")
    print("1. Ejemplo b√°sico (2 c√≥digos postales)")
    print("2. Ejemplo avanzado (1 c√≥digo postal)")
    print("3. C√≥digo postal espec√≠fico (Bullas)")
    print("4. An√°lisis de datos")
    print("5. Ejecutar todos los ejemplos")
    print("0. Salir")
    print()

    try:
        opcion = input("Opci√≥n: ").strip()

        if opcion == "1":
            ejemplo_basico()
        elif opcion == "2":
            ejemplo_avanzado()
        elif opcion == "3":
            ejemplo_codigo_especifico()
        elif opcion == "4":
            ejemplo_analisis_datos()
        elif opcion == "5":
            print("\nüöÄ Ejecutando todos los ejemplos...")
            ejemplo_basico()
            time.sleep(2)
            ejemplo_avanzado()
            time.sleep(2)
            ejemplo_codigo_especifico()
            time.sleep(2)
            ejemplo_analisis_datos()
            print("\n‚úÖ Todos los ejemplos completados")
        elif opcion == "0":
            print("üëã ¬°Hasta luego!")
            return False
        else:
            print("‚ùå Opci√≥n no v√°lida")

        return True

    except KeyboardInterrupt:
        print("\nüëã ¬°Hasta luego!")
        return False
    except Exception as e:
        print(f"‚ùå Error: {e}")
        return True

def main():
    """Funci√≥n principal"""
    print("üéØ EJEMPLOS DE USO DEL SCRAPER DE EMPRESAS")
    print("Regi√≥n de Murcia - C√≥digos Postales")
    print()

    # Verificar que el archivo CSV existe
    try:
        df = pd.read_csv("municipios_pedanias_codigos_postales_corregidos.csv")
        print(f"‚úÖ Archivo CSV cargado: {len(df)} filas, {len(df['codigo_postal'].unique())} c√≥digos √∫nicos")
    except Exception as e:
        print(f"‚ùå Error al cargar CSV: {e}")
        print("   Aseg√∫rate de que el archivo est√© en el directorio actual")
        return

    print()

    # Ejecutar men√∫
    while menu_principal():
        print("\n" + "=" * 50)
        input("Presiona Enter para continuar...")

if __name__ == "__main__":
    main()
